import pandas as pd
from sklearn.model_selection import train_test_split
import sklearn.metrics as metrics
import numpy as np
from sklearn.neighbors import KNeighborsClassifier

df=pd.read_csv("diabetes.csv")
df.isna().sum()
X=df.drop(['Outcome'],axis=1)
Y=df['Outcome']

X_train,X_test,y_train,y_test=train_test_split(X,Y,test_size=0.2,random_state=44)
knn = KNeighborsClassifier(n_neighbors=3)
knn.fit(X_train,y_train)
y_pred =knn.predict(X_test)

accuracy=metrics.accuracy_score(y_test,y_pred)
print("Accuracy Score:",accuracy*100)

from sklearn.metrics import confusion_matrix
print(confusion_matrix(y_test,y_pred))

tn,fp,fn,tp= confusion_matrix(y_test,y_pred).ravel()

print("True Negative: ",tn)
print("False Positive: ",fp)
print("True Positive: ",tp)
print("False Negative: ",fn)

#Accuracy
accuracy=(tn+tp)*100/(tn+tp+fp+fn)

print("Accuracy:{:0.2f}% ".format(accuracy))

#Precision
Precision=tp/(tp+fp)

print("Precision {:0.2f}".format(Precision))

#Recall 

Recall=tp/(tp+fn)
print("Recall {:0.2f}".format(Recall))

# Error rate

err=(fp+fn)/(tp+tn+fn+fp)
print("Error rate:{:0.2f}".format(err))
